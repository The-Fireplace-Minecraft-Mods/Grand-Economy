plugins {
	// Dependencies
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id "com.github.johnrengelman.shadow" version "5.0.0"
	// Mod Hosting Publish
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "1.1.0"
	// Maven Publish
	id "com.jfrog.bintray" version "1.8.4"
	id "maven-publish"
	id "java"
	id "java-library"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group as String

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"
	modApi("me.shedaniel.cloth:config-2:${project.clothconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.shedaniel.cloth:config-2:${project.clothconfig_version}"
	modImplementation "the_fireplace.lib:Fireplace-Lib:${project.fireplacelib_version}"
	include "the_fireplace.lib:Fireplace-Lib:${project.fireplacelib_version}"
	modApi("io.github.gunpowder:gunpowder-api:${gunpowder_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	implementation "blue.endless:jankson:1.1.+"

	compile "com.google.code.findbugs:jsr305:3.0.2"
}

repositories {
	maven {
		name = "Gunpowder"
		url = "https://maven.martmists.com/releases"
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

shadowJar {
	relocate("blue.endless.jankson", "${group}.shadowed.blue.endless.jankson")

	configurations = [project.configurations.shadow]
	classifier "shadow"
}

remapJar {
	dependsOn(shadowJar)
	input.set(shadowJar.archivePath)
}

jar {
	from "LICENSE.md"
}

curseforge {
	apiKey = project.hasProperty("curseForgeApiKey") ? project.curseForgeApiKey : "empty"
	project {
		id = '312141'
		changelog = file('changelog.txt')
		releaseType = project.release_type
		addGameVersion project.minecraft_version
		addGameVersion '1.16.4'
		addGameVersion '1.16.3'
		addGameVersion '1.16.2'
		addGameVersion 'Java 8'
		addGameVersion 'Fabric'
		mainArtifact(new File(new File(buildDir, "libs"), "$archivesBaseName-${version}.jar")) {
			displayName = "$archivesBaseName-$version"
			relations {
				requiredDependency 'fabric-api'
				embeddedLibrary 'fireplace-lib'
				embeddedLibrary 'cloth-config'
				optionalDependency 'modmenu'
				optionalDependency 'gunpowder-currency'
			}
		}
	}
	options {
		javaIntegration = false
		forgeGradleIntegration = false
	}
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {
	token = project.hasProperty("modrinthApiKey") ? project.modrinthApiKey : "empty"
	projectId = '000000'
	versionNumber = version
	versionName = project.mod_version
	uploadFile = jar // This is the java jar task
	changelog = file('changelog.txt').getText()
	releaseType = project.release_type
	addGameVersion(project.minecraft_version as String)
	addGameVersion('1.16.4')
	addGameVersion('1.16.3')
	addGameVersion('1.16.2')
	addLoader('fabric')
}

bintray {
	user = project.hasProperty("bintrayUser") ? project.bintrayUser : "empty"
	key = project.hasProperty("bintrayApiKey") ? project.bintrayApiKey : "empty"
	setPublications("mavenJava")
	publish = true
	pkg {
		repo = "mc-mods"
		name = "grand-economy"
		licenses = ["GPL-2.0"]
	}
}

def remapSourcesJar = tasks.getByName("remapSourcesJar")

publishing {
	publications {
		mavenJava(MavenPublication.class) {
			artifact(remapJar)
			artifact(sourcesJar) {
				builtBy(remapSourcesJar)
			}
		}
	}
}
